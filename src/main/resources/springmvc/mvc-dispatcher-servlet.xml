<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--确定使用注解的类所在的包，扫描该路径寻找使用注解的类和方法-->
    <context:component-scan base-package="com.fanli.metadata"/>

    <mvc:resources mapping="/assets/**" location="/assets/" />

    <!-- 通过注解，把URL映射到Controller上，该标签默认注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter -->
    <mvc:annotation-driven />

    <!--允许autowire，他的作用是隐式地向 Spring 容器注册
    AutowiredAnnotationBeanPostProcessor、
    CommonAnnotationBeanPostProcessor、
    PersistenceAnnotationBeanPostProcessor、
    RequiredAnnotationBeanPostProcessor
    这 4 个BeanPostProcessor。
    例如：
    如果想使用@ Resource 、@ PostConstruct、@ PreDestroy等注解就必须声明CommonAnnotationBeanPostProcessor。
    如果想使用@PersistenceContext注解，就必须声明PersistenceAnnotationBeanPostProcessor的Bean。
    如果你想使用@Autowired注解，那么就必须事先在 Spring 容器中声明 AutowiredAnnotationBeanPostProcessor Bean。-->
    <context:annotation-config/>

    <import resource="classpath:spring/applicationContext-*"/>

    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/pages/"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

</beans>